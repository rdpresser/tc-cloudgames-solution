tc-cloudgames-solution
- .git
- .github
- - workflows
- docs
- infrastructure
- - azd		==> aqui preciso entender se faz sentido de manter ou não aqui ou em cada api ter a sua própria pasta de azd e projects
- - - foundation
- - - - scripts
- - - resources
- - - - container_app_env
- - terraform
- - - foundation
- - - modules
- - - - container_app
- - - - container_app_env
- - - - container_registry
- - - - key_vault
- - - - log_analytics
- - - - postgres
- - - - redis
- - - - resource_group
- - - - service_bus
- orchestration
- - apphost
- scripts
- services
- - games
- - - .git
- - payments
- - - .git
- - users
- - - .git
- - - .github
- - - - workflows       ==> estou pensando em manter os pipelines de user nessa pasta, para manter tudo referente ao projeto dentro da sua infra de pipeline especifica
- - - azd               ===> aqui penso em manter o azd também especifico para cada serviço, nesse caso o de users
- - - src
- - - - Adapters
- - - - - Inbound
- - - - - - TC.CloudGames.Users.Api  ==> projeto de api
- - - - - Outbound
- - - - - - TC.CloudGames.Users.Infrastructure ==> projeto de infra
- - - - Core
- - - - - TC.CloudGames.Users.Application ==> camada de application
- - - - - TC.CloudGames.Users.Domain ==> camada de domain
- - - test
- - - - TC.CloudGames.Users.Unit.Tests ==> testes unitarios
- - - - - Api
- - - - - Application
- - - - - Common
- - - - - Domain
- - - - - Fakes
- - - - - Shared
- shared  ==> projeto de shared kernel em comum com todos os projetos
- - common
- - - .git
- - - src
- - - - TC.CloudGames.Contracts ==> contratos messagebroker wolverine
- - - - TC.CloudGames.SharedKernel ==> kernel compartilhado