name: 🏗️ Infra | Terraform + AZD Foundation

on:
  pull_request:
    types: [closed]
    branches:
      - main
  workflow_dispatch:
    inputs:
      confirm_deploy:
        description: 'Type "deploy" to confirm'
        required: true
        default: ''

env:
  TF_VERSION: '1.13.1'
  TF_WORKING_DIR: './infrastructure/terraform/foundation'
  TF_CLOUD_ORGANIZATION: ${{ vars.TF_CLOUD_ORGANIZATION }}
  TF_WORKSPACE: ${{ vars.TF_WORKSPACE_DEV }}
  AZD_WORKING_DIR: './infrastructure/azd/foundation'

jobs:

  terraform-deploy:
    runs-on: ubuntu-latest
    environment: 'dev-rodrigo'
    timeout-minutes: 40
    outputs:
      tf_output_rg: ${{ steps.terraform-outputs.outputs.rg_name }}
      tf_output_location: ${{ steps.terraform-outputs.outputs.location }}
      tf_output_log_analytics_id: ${{ steps.terraform-outputs.outputs.log_analytics_id }}
    if: |
      (github.event_name == 'pull_request' && 
       github.event.pull_request.merged == true) ||
      (github.event_name == 'workflow_dispatch' && 
       github.event.inputs.confirm_deploy == 'deploy')
    steps:
      - name: ⏬ Checkout repository
        uses: actions/checkout@v4

      - name: 🔒 Validate Required Secrets
        run: |
          if [ -z "${{ secrets.TF_API_TOKEN }}" ]; then
            echo "❌ TF_API_TOKEN secret is required"
            exit 1
          fi
          if [ -z "${{ secrets.AZURE_CREDENTIALS }}" ]; then
            echo "❌ AZURE_CREDENTIALS secret is required"
            exit 1
          fi

      - name: 🗂️ Cache Terraform
        uses: actions/cache@v3
        with:
          path: |
            ~/.terraform.d/plugin-cache
            **/.terraform
          key: terraform-${{ env.TF_VERSION }}-${{ hashFiles('**/*.tf') }}

      - name: ⚙️ Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: 🔧 Terraform Init & Plan & Apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform init -upgrade
          terraform validate
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan

      - name: 🎉 Foundation Deployment Summary
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          TERRAFORM_OUTPUT=$(terraform output -json)
          
          # Extract key values for summary
          RG_NAME=$(echo $TERRAFORM_OUTPUT | jq -r '.foundation_rg_name.value')
          LOCATION=$(echo $TERRAFORM_OUTPUT | jq -r '.foundation_rg_location.value')
          CONTAINER_APP_ENV=$(echo $TERRAFORM_OUTPUT | jq -r '.container_app_environment_info.value.name')
          KEY_VAULT_NAME=$(echo $TERRAFORM_OUTPUT | jq -r '.key_vault_info.value.name')
          
          # Create comprehensive step summary
          echo "## 🏗️ TC CloudGames Foundation - Deployment Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 Infrastructure Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Resource Type | Resource Name | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|---------------|---------------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Resource Group | $RG_NAME | ✅ Created |" >> $GITHUB_STEP_SUMMARY
          echo "| Location | $LOCATION | ✅ Set |" >> $GITHUB_STEP_SUMMARY
          echo "| Container App Environment | $CONTAINER_APP_ENV | ✅ Ready for apps |" >> $GITHUB_STEP_SUMMARY
          echo "| Key Vault | $KEY_VAULT_NAME | ✅ Empty, ready for secrets |" >> $GITHUB_STEP_SUMMARY
          echo "| PostgreSQL Server | $(echo $TERRAFORM_OUTPUT | jq -r '.postgres_info.value.name') | ✅ Ready |" >> $GITHUB_STEP_SUMMARY
          echo "| Azure Container Registry | $(echo $TERRAFORM_OUTPUT | jq -r '.acr_info.value.name') | ✅ Ready |" >> $GITHUB_STEP_SUMMARY
          echo "| Redis Cache | $(echo $TERRAFORM_OUTPUT | jq -r '.redis_info.value.name') | ✅ Ready |" >> $GITHUB_STEP_SUMMARY
          echo "| Service Bus | $(echo $TERRAFORM_OUTPUT | jq -r '.servicebus_info.value.namespace') | ✅ Ready |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🚀 Next Steps" >> $GITHUB_STEP_SUMMARY  
          echo "- **Users API**: Can now deploy Container App with System MI" >> $GITHUB_STEP_SUMMARY
          echo "- **Games API**: Can now deploy Container App with System MI" >> $GITHUB_STEP_SUMMARY
          echo "- **Payments API**: Can now deploy Container App with System MI" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔗 [View Resource Group in Azure Portal](https://portal.azure.com/#@/resource$(echo $TERRAFORM_OUTPUT | jq -r '.foundation_rg_id.value')/overview)" >> $GITHUB_STEP_SUMMARY
