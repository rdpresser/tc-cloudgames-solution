name: 🏗️ Infra | Terraform + AZD Foundation

on:
  pull_request:
    types: [closed]
    branches:
      - main
  workflow_dispatch:
    inputs:
      confirm_deploy:
        description: 'Type "deploy" to confirm'
        required: true
        default: 'dev-rodrigo'

env:
  TF_VERSION: '1.13.0'
  TF_WORKING_DIR: './infrastructure/terraform/foundation'
  TF_CLOUD_ORGANIZATION: ${{ vars.TF_CLOUD_ORGANIZATION }}
  TF_WORKSPACE: ${{ vars.TF_WORKSPACE_DEV }}
  AZD_WORKING_DIR: './infrastructure/azd/foundation'

jobs:

  terraform-deploy:
    runs-on: ubuntu-latest
    environment: 'dev-rodrigo'
    timeout-minutes: 40
    if: |
      (github.event_name == 'pull_request' && 
       github.event.pull_request.merged == true) ||
      (github.event_name == 'workflow_dispatch' && 
       github.event.inputs.confirm_deploy == 'deploy')
    steps:
      - name: ⏬ Checkout repository
        uses: actions/checkout@v4

      - name: 🔒 Validate Required Secrets
        run: |
          if [ -z "${{ secrets.TF_API_TOKEN }}" ]; then
            echo "❌ TF_API_TOKEN secret is required"
            exit 1
          fi
          if [ -z "${{ secrets.AZURE_CREDENTIALS }}" ]; then
            echo "❌ AZURE_CREDENTIALS secret is required"
            exit 1
          fi

      - name: 🗂️ Cache Terraform
        uses: actions/cache@v3
        with:
          path: |
            ~/.terraform.d/plugin-cache
            **/.terraform
          key: terraform-${{ env.TF_VERSION }}-${{ hashFiles('**/*.tf') }}

      - name: ⚙️ Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: 🔧 Terraform Init & Plan & Apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform init -upgrade
          terraform validate
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan

      - name: 📊 Terraform Outputs -> GitHub Env
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          TERRAFORM_OUTPUT=$(terraform output -json)
          echo "TF_OUTPUT_RG=$(echo $TERRAFORM_OUTPUT | jq -r '.foundation_rg_name.value')" >> $GITHUB_ENV
          echo "TF_OUTPUT_LOCATION=$(echo $TERRAFORM_OUTPUT | jq -r '.foundation_rg_location.value')" >> $GITHUB_ENV
          echo "TF_OUTPUT_LOG_ANALYTICS_ID=$(echo $TERRAFORM_OUTPUT | jq -r '.log_analytics_info.value.id')" >> $GITHUB_ENV

  azd-deploy:
    runs-on: ubuntu-latest
    needs: terraform-deploy
    environment: 'dev-rodrigo'
    steps:
      - name: ⏬ Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Azure CLI
        uses: azure/cli@v1
        with:
          inlineScript: echo "Azure CLI installed"

      - name: 🔧 Install AZD
        run: |
          curl -sL https://aka.ms/install-azd.sh | bash

      - name: 🔒 Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 📁 Prepare AZD Environment File
        working-directory: ${{ env.AZD_WORKING_DIR }}
        run: |
          jq '.resourceGroup = env.TF_OUTPUT_RG |
              .location = env.TF_OUTPUT_LOCATION |
              .logAnalyticsWorkspaceId = env.TF_OUTPUT_LOG_ANALYTICS_ID |
              .tags.Environment = "dev" |
              .tags.Project = "TC Cloud Games" |
              .tags.ManagedBy = "azd"' env.template.json > env.json

      - name: 🚀 Deploy AZD Foundation (Container App Env + Key Vault)
        working-directory: ${{ env.AZD_WORKING_DIR }}
        run: |
          azd up --environment-file env.json --verbose
